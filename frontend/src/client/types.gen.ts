// This file is auto-generated by @hey-api/openapi-ts

export type BodyLoginLoginAccessToken = {
	grant_type?: string | null;
	username: string;
	password: string;
	scope?: string;
	client_id?: string | null;
	client_secret?: string | null;
};

export type Card = {
	front: string;
	back: string;
	id: string;
	collection_id: string;
};

export type CardCreate = {
	front: string;
	back: string;
};

export type CardList = {
	data: Array<Card>;
	count: number;
};

export type Collection = {
	name: string;
	description?: string | null;
	id: string;
	user_id: string;
	cards: Array<Card>;
};

export type CollectionCreate = {
	name: string;
	description?: string | null;
};

export type CollectionList = {
	data: Array<Collection>;
	count: number;
};

export type CollectionUpdate = {
	name?: string | null;
	description?: string | null;
};

export type HttpValidationError = {
	detail?: Array<ValidationError>;
};

export type Token = {
	access_token: string;
	token_type?: string;
};

export type UserPublic = {
	email: string;
	is_active?: boolean;
	is_superuser?: boolean;
	full_name?: string | null;
	id: string;
};

export type UserRegister = {
	email: string;
	password: string;
	full_name?: string | null;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type LoginLoginAccessTokenData = {
	body: BodyLoginLoginAccessToken;
	path?: never;
	query?: never;
	url: "/api/v1/login/access-token";
};

export type LoginLoginAccessTokenErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type LoginLoginAccessTokenError =
	LoginLoginAccessTokenErrors[keyof LoginLoginAccessTokenErrors];

export type LoginLoginAccessTokenResponses = {
	/**
	 * Successful Response
	 */
	200: Token;
};

export type LoginLoginAccessTokenResponse =
	LoginLoginAccessTokenResponses[keyof LoginLoginAccessTokenResponses];

export type UsersReadUserMeData = {
	body?: never;
	path?: never;
	query?: never;
	url: "/api/v1/users/me";
};

export type UsersReadUserMeResponses = {
	/**
	 * Successful Response
	 */
	200: UserPublic;
};

export type UsersReadUserMeResponse =
	UsersReadUserMeResponses[keyof UsersReadUserMeResponses];

export type UsersRegisterUserData = {
	body: UserRegister;
	path?: never;
	query?: never;
	url: "/api/v1/users/signup";
};

export type UsersRegisterUserErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UsersRegisterUserError =
	UsersRegisterUserErrors[keyof UsersRegisterUserErrors];

export type UsersRegisterUserResponses = {
	/**
	 * Successful Response
	 */
	200: UserPublic;
};

export type UsersRegisterUserResponse =
	UsersRegisterUserResponses[keyof UsersRegisterUserResponses];

export type FlashcardsReadCollectionsData = {
	body?: never;
	path?: never;
	query?: {
		skip?: number;
		limit?: number;
	};
	url: "/api/v1/flashcards/collections/";
};

export type FlashcardsReadCollectionsErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type FlashcardsReadCollectionsError =
	FlashcardsReadCollectionsErrors[keyof FlashcardsReadCollectionsErrors];

export type FlashcardsReadCollectionsResponses = {
	/**
	 * Successful Response
	 */
	200: CollectionList;
};

export type FlashcardsReadCollectionsResponse =
	FlashcardsReadCollectionsResponses[keyof FlashcardsReadCollectionsResponses];

export type FlashcardsCreateCollectionData = {
	body: CollectionCreate;
	path?: never;
	query?: never;
	url: "/api/v1/flashcards/collections/";
};

export type FlashcardsCreateCollectionErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type FlashcardsCreateCollectionError =
	FlashcardsCreateCollectionErrors[keyof FlashcardsCreateCollectionErrors];

export type FlashcardsCreateCollectionResponses = {
	/**
	 * Successful Response
	 */
	200: Collection;
};

export type FlashcardsCreateCollectionResponse =
	FlashcardsCreateCollectionResponses[keyof FlashcardsCreateCollectionResponses];

export type FlashcardsReadCollectionData = {
	body?: never;
	path: {
		collection_id: string;
	};
	query?: never;
	url: "/api/v1/flashcards/collections/{collection_id}";
};

export type FlashcardsReadCollectionErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type FlashcardsReadCollectionError =
	FlashcardsReadCollectionErrors[keyof FlashcardsReadCollectionErrors];

export type FlashcardsReadCollectionResponses = {
	/**
	 * Successful Response
	 */
	200: Collection;
};

export type FlashcardsReadCollectionResponse =
	FlashcardsReadCollectionResponses[keyof FlashcardsReadCollectionResponses];

export type FlashcardsUpdateCollectionData = {
	body: CollectionUpdate;
	path: {
		collection_id: string;
	};
	query?: never;
	url: "/api/v1/flashcards/collections/{collection_id}";
};

export type FlashcardsUpdateCollectionErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type FlashcardsUpdateCollectionError =
	FlashcardsUpdateCollectionErrors[keyof FlashcardsUpdateCollectionErrors];

export type FlashcardsUpdateCollectionResponses = {
	/**
	 * Successful Response
	 */
	200: Collection;
};

export type FlashcardsUpdateCollectionResponse =
	FlashcardsUpdateCollectionResponses[keyof FlashcardsUpdateCollectionResponses];

export type FlashcardsReadCardsData = {
	body?: never;
	path: {
		collection_id: string;
	};
	query?: {
		skip?: number;
		limit?: number;
	};
	url: "/api/v1/flashcards/collections/{collection_id}/cards/";
};

export type FlashcardsReadCardsErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type FlashcardsReadCardsError =
	FlashcardsReadCardsErrors[keyof FlashcardsReadCardsErrors];

export type FlashcardsReadCardsResponses = {
	/**
	 * Successful Response
	 */
	200: CardList;
};

export type FlashcardsReadCardsResponse =
	FlashcardsReadCardsResponses[keyof FlashcardsReadCardsResponses];

export type FlashcardsCreateCardData = {
	body: CardCreate;
	path: {
		collection_id: string;
	};
	query?: never;
	url: "/api/v1/flashcards/collections/{collection_id}/cards/";
};

export type FlashcardsCreateCardErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type FlashcardsCreateCardError =
	FlashcardsCreateCardErrors[keyof FlashcardsCreateCardErrors];

export type FlashcardsCreateCardResponses = {
	/**
	 * Successful Response
	 */
	200: Card;
};

export type FlashcardsCreateCardResponse =
	FlashcardsCreateCardResponses[keyof FlashcardsCreateCardResponses];

export type FlashcardsReadCardData = {
	body?: never;
	path: {
		collection_id: string;
		card_id: string;
	};
	query?: never;
	url: "/api/v1/flashcards/collections/{collection_id}/cards/{card_id}";
};

export type FlashcardsReadCardErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type FlashcardsReadCardError =
	FlashcardsReadCardErrors[keyof FlashcardsReadCardErrors];

export type FlashcardsReadCardResponses = {
	/**
	 * Successful Response
	 */
	200: Card;
};

export type FlashcardsReadCardResponse =
	FlashcardsReadCardResponses[keyof FlashcardsReadCardResponses];

export type ClientOptions = {
	baseURL: `${string}://${string}` | (string & {});
};
