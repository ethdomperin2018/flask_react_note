// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type Card = {
  front: string
  back: string
  id: string
  collection_id: string
}

export type CardCreate = {
  front: string
  back: string
}

export type CardList = {
  data: Array<Card>
  count: number
}

export type Collection = {
  name: string
  id: string
  user_id: string
  cards: Array<Card>
}

export type CollectionCreate = {
  name: string
}

export type CollectionList = {
  data: Array<Collection>
  count: number
}

export type CollectionUpdate = {
  name?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type FlashcardsReadCollectionsData = {
  limit?: number
  skip?: number
}

export type FlashcardsReadCollectionsResponse = CollectionList

export type FlashcardsCreateCollectionData = {
  requestBody: CollectionCreate
}

export type FlashcardsCreateCollectionResponse = Collection

export type FlashcardsReadCollectionData = {
  collectionId: string
}

export type FlashcardsReadCollectionResponse = Collection

export type FlashcardsUpdateCollectionData = {
  collectionId: string
  requestBody: CollectionUpdate
}

export type FlashcardsUpdateCollectionResponse = Collection

export type FlashcardsDeleteCollectionData = {
  collectionId: string
}

export type FlashcardsDeleteCollectionResponse = void

export type FlashcardsReadCardsData = {
  collectionId: string
  limit?: number
  skip?: number
}

export type FlashcardsReadCardsResponse = CardList

export type FlashcardsCreateCardData = {
  collectionId: string
  requestBody: CardCreate
}

export type FlashcardsCreateCardResponse = Card

export type FlashcardsReadCardData = {
  cardId: string
  collectionId: string
}

export type FlashcardsReadCardResponse = Card

export type FlashcardsDeleteCardData = {
  cardId: string
  collectionId: string
}

export type FlashcardsDeleteCardResponse = void

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type UsersReadUserMeResponse = UserPublic

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic
